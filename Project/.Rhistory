X37_Algorand <- read_csv('Data/Coins/37_Algorand.csv')
X38_Decred <- read_csv('Data/Coins/38_Decred.csv')
X39_Bitcoin_Gold <- read_csv('Data/Coins/39_Bitcoin_Gold.csv')
X40_ICON <- read_csv('Data/Coins/40_ICON.csv')
X41_Hedera_Hashgraph <- read_csv('Data/Coins/41_Hedera_Hashgraph.csv')
volt <- cbind(X1_Bitcoin$VolumeTraded[1:919], X2_Ethereum$VolumeTraded[1:919], X3_XRP$VolumeTraded[1:919], X4_Bitcoin_Cash$VolumeTraded[1:919], X7_Litecoin$VolumeTraded[1:919], X8_EOS$VolumeTraded[1:919], X9_Binance_Coin$VolumeTraded[1:919], X15_TRON$VolumeTraded[1:919])
marketc <- cbind(X1_Bitcoin$MarketCap[1:919], X2_Ethereum$MarketCap[1:919], X3_XRP$MarketCap[1:919], X4_Bitcoin_Cash$MarketCap[1:919], X7_Litecoin$MarketCap[1:919], X8_EOS$MarketCap[1:919], X9_Binance_Coin$MarketCap[1:919], X15_TRON$MarketCap[1:919])
predictor_matrix <- cbind(volt, marketc)
crypto <- read_csv("Data/crypto.csv")
crypto$day <- 1:869
Final_Tether30Days <- read_csv("Data/Final_Tether30Days.csv")
#Forecasting for next 30 days of 1Bitcoin
svmodel <- svm(X1_Bitcoin$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_1BitcoinMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of TRON
svmodel <- svm(X15_TRON$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_15TRONMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 4BitcoinCash
svmodel <- svm(X4_Bitcoin_Cash$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_4BitcoinCashMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 7Litecoin
svmodel <- svm(X7_Litecoin$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_7LitecoinMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 8EOS
svmodel <- svm(X8_EOS$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_8EOSMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 9BinanceCoin
svmodel <- svm(X9_Binance_Coin$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_9BinanceCoinMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of TRON
svmodel <- svm(X15_TRON$VolumeTraded[1:869] ~ day,data=day, type="eps-regression",kernel="radial",cost=10000, gamma=10)
#Forecasting for next 30 days of 16Monero
svmodel <- svm(X14_Monero$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_16Monero <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 16Monero
svmodel <- svm(X1_Bitcoin$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_1BitcoinVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of TRON
svmodel <- svm(X15_TRON$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_15TRONVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 2Ethereum
svmodel <- svm(X2_Ethereum$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_2EthereumVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 60 days of 2Ethereum
range_60days <- 870:929
predict60_2EthereumVT <- predict(svmodel, newdata=data.frame(day=range_60days))
#Forecasting for next 30 days of 3XRP
svmodel <- svm(X3_XRP$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_3XRPVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 4BitcoinCash
svmodel <- svm(X4_Bitcoin_Cash$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_4BitcoinCashVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 7Litecoin
svmodel <- svm(X7_Litecoin$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_7LitecoinVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 8EOS
svmodel <- svm(X8_EOS$VolumeTraded[1:869] ~ day,data=day, type="eps-regression",kernel="radial",cost=10000, gamma=10)
svmodel <- svm(X8_EOS$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_8EOSVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 9BinanceCoin
svmodel <- svm(X9_Binance_Coin$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_9BinanceCoinVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Predicting 5_Tether using SVM regression and other Crypto-currencies for 30 days
svmodel <- svm(X5_Tether$MarketCap[1:869] ~ X4_Bitcoin_Cash$MarketCap[1:869] + X1_Bitcoin$MarketCap[1:869] + X7_Litecoin$MarketCap[1:869] +
X8_EOS$MarketCap[1:869] + X9_Binance_Coin$MarketCap[1:869]	+  X4_Bitcoin_Cash$VolumeTraded[1:869] +
X1_Bitcoin$VolumeTraded[1:869] + X7_Litecoin$VolumeTraded[1:869] + X8_EOS$VolumeTraded[1:869] +
X9_Binance_Coin$VolumeTraded[1:869]	+ X2_Ethereum$VolumeTraded[1:869] + X3_XRP$VolumeTraded[1:869],
data=day, type="eps-regression",kernel="radial",cost=10000, gamma=10)
svmodel
predict30_X5Tether <- predict(svmodel, newdata = data.frame(X4BitcoinCashMC = predict30_4BitcoinCashMC, X4BitcoinCashVT = predict30_4BitcoinCashVT,
X3XRPVT = predict30_3XRPVT,X2EthereumVT = predict30_2EthereumVT,
X1BitcoinMC = predict30_1BitcoinMC, X1BitcoinVT = predict30_1BitcoinVT,
X7LitecoinMC = predict30_7LitecoinMC, X7LitecoinVT = predict30_7LitecoinVT,
X8EOSMC = predict30_8EOSMC,	X8EOSMC = predict30_8EOSVT,
X9BinanceCoinMC = predict30_9BinanceCoinMC, X9BinanceCoinMC = predict30_9BinanceCoinMC))[1:30]
predict30_X5Tether
time30 <- 1:30
plot(time30, predict30_X5Tether)
data <- data.frame(cbind(predict30_X5Tether,Final_Tether30Days$MarketCap[1:30] ))
colnames(data) <- c("predicted", "real")
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data <- data.frame(cbind(predict30_X5Tether,Final_Tether30Days$MarketCap[1:30] ))
colnames(data) <- c("predicted", "real")
data$real <- rev(data$real)
for( i in 1:30){
data$real[i] = data$real[i]- 7471671
}
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
library(ggplot2)
svmodel <- svm(X1_Bitcoin$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_1BitcoinMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of TRON
svmodel <- svm(X15_TRON$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_15TRONMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 4BitcoinCash
svmodel <- svm(X4_Bitcoin_Cash$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_4BitcoinCashMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 7Litecoin
svmodel <- svm(X7_Litecoin$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_7LitecoinMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 8EOS
svmodel <- svm(X8_EOS$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_8EOSMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 9BinanceCoin
svmodel <- svm(X9_Binance_Coin$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_9BinanceCoinMC <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of TRON
svmodel <- svm(X15_TRON$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
#Forecasting for next 30 days of 16Monero
svmodel <- svm(X14_Monero$MarketCap[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_16Monero <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 16Monero
svmodel <- svm(X1_Bitcoin$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_1BitcoinVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of TRON
svmodel <- svm(X15_TRON$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_15TRONVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 2Ethereum
svmodel <- svm(X2_Ethereum$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_2EthereumVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 60 days of 2Ethereum
range_60days <- 870:929
predict60_2EthereumVT <- predict(svmodel, newdata=data.frame(day=range_60days))
#Forecasting for next 30 days of 3XRP
svmodel <- svm(X3_XRP$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_3XRPVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 4BitcoinCash
svmodel <- svm(X4_Bitcoin_Cash$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_4BitcoinCashVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 7Litecoin
svmodel <- svm(X7_Litecoin$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_7LitecoinVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 8EOS
svmodel <- svm(X8_EOS$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
svmodel <- svm(X8_EOS$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_8EOSVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Forecasting for next 30 days of 9BinanceCoin
svmodel <- svm(X9_Binance_Coin$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_9BinanceCoinVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Predicting 5_Tether using SVM regression and other Crypto-currencies for 30 days
svmodel <- svm(X5_Tether$MarketCap[1:869] ~ X4_Bitcoin_Cash$MarketCap[1:869] + X1_Bitcoin$MarketCap[1:869] + X7_Litecoin$MarketCap[1:869] +
X8_EOS$MarketCap[1:869] + X9_Binance_Coin$MarketCap[1:869]	+  X4_Bitcoin_Cash$VolumeTraded[1:869] +
X1_Bitcoin$VolumeTraded[1:869] + X7_Litecoin$VolumeTraded[1:869] + X8_EOS$VolumeTraded[1:869] +
X9_Binance_Coin$VolumeTraded[1:869]	+ X2_Ethereum$VolumeTraded[1:869] + X3_XRP$VolumeTraded[1:869],
data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
svmodel
summary(svmodel)
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
data <- data.frame(cbind(predict30_X5Tether,Final_Tether30Days$MarketCap[1:30] ))
colnames(data) <- c("predicted", "real")
data$real <- rev(data$real)
for( i in 1:30){
data$real[i] = data$real[i]- 7471671
}
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
g
data <- data.frame(cbind(predict30_X5Tether,Final_Tether30Days$MarketCap[1:30] ))
svmodel <- svm(X5_Tether$MarketCap[1:869] ~ X4_Bitcoin_Cash$MarketCap[1:869] + X1_Bitcoin$MarketCap[1:869] + X7_Litecoin$MarketCap[1:869] +
X8_EOS$MarketCap[1:869] + X9_Binance_Coin$MarketCap[1:869]	+  X4_Bitcoin_Cash$VolumeTraded[1:869] +
X1_Bitcoin$VolumeTraded[1:869] + X7_Litecoin$VolumeTraded[1:869] + X8_EOS$VolumeTraded[1:869] +
X9_Binance_Coin$VolumeTraded[1:869]	+ X2_Ethereum$VolumeTraded[1:869] + X3_XRP$VolumeTraded[1:869],
data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
svmodel
summary(svm)
predict30_X5Tether <- predict(svmodel, newdata = data.frame(X4BitcoinCashMC = predict30_4BitcoinCashMC, X4BitcoinCashVT = predict30_4BitcoinCashVT,
X3XRPVT = predict30_3XRPVT,X2EthereumVT = predict30_2EthereumVT,
X1BitcoinMC = predict30_1BitcoinMC, X1BitcoinVT = predict30_1BitcoinVT,
X7LitecoinMC = predict30_7LitecoinMC, X7LitecoinVT = predict30_7LitecoinVT,
X8EOSMC = predict30_8EOSMC,	X8EOSMC = predict30_8EOSVT,
X9BinanceCoinMC = predict30_9BinanceCoinMC, X9BinanceCoinMC = predict30_9BinanceCoinMC))[1:30]
predict30_X5Tether
time30 <- 1:30
plot(time30, predict30_X5Tether)
data <- data.frame(cbind(predict30_X5Tether,Final_Tether30Days$MarketCap[1:30] ))
colnames(data) <- c("predicted", "real")
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
time30 <- 1:5
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
time30 <- 1:5
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted[1:5]), color = "darkred") +
geom_line(aes(y=data$real[1:5]), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data <- data.frame(cbind(predict30_X5Tether[1:5],Final_Tether30Days$MarketCap[1:5] ))
colnames(data) <- c("predicted", "real")
time30 <- 1:5
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted[1:5]), color = "darkred") +
geom_line(aes(y=data$real[1:5]), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data <- data.frame(cbind(predict30_X5Tether[5:30],Final_Tether30Days$MarketCap[5:30] ))
colnames(data) <- c("predicted", "real")
time30 <- 1:5
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
time30 <- 1:25
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data$real <- rev(data$real)
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data <- data.frame(cbind(predict30_X5Tether[5:30],Final_Tether30Days$MarketCap[5:30] ))
data$real <- rev(data$real)
colnames(data) <- c("predicted", "real")
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
colnames(data) <- c("predicted", "real")
data <- data.frame(cbind(predict30_X5Tether[5:30],Final_Tether30Days$MarketCap[5:30] ))
data$real <- rev(data$real)
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data$real <- rev(data$real)
data <- data.frame(cbind(predict30_X5Tether[5:30],Final_Tether30Days$MarketCap[5:30] ))
data$real <- rev(data$real)
colnames(data) <- c("predicted", "real")
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data$real <- rev(data$real)
colnames(data) <- c("predicted", "real")
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
Final_Tether30Days$MarketCap <- rev(Final_Tether30Days$MarketCap)
data <- data.frame(cbind(predict30_X5Tether[5:30],Final_Tether30Days$MarketCap[5:30] ))
colnames(data) <- c("predicted", "real")
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
for( i in 1:30){
data$real[i] = data$real[i]- 7471671
}
for( i in 1:26){
data$real[i] = data$real[i]- 7471671
}
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data <- data.frame(cbind(predict30_X5Tether[5:30],Final_Tether30Days$MarketCap[5:30] ))
colnames(data) <- c("predicted", "real")
for( i in 1:26){
data$real[i] = data$real[i]- 7471671
}
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
for( i in 1:26){
data$real[i] = data$real[i]- 7471671
}
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
for( i in 1:26){
Final_Tether30Days$MarketCap[i] = Final_Tether30Days$MarketCap[i]- 100000
}
data <- data.frame(cbind(predict30_X5Tether[5:30],Final_Tether30Days$MarketCap[5:30] ))
colnames(data) <- c("predicted", "real")
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
for( i in data$real){
data$real[i] = data$real[i]- 100000000
}
for( i in 1:26){
data$real[i] = data$real[i]- 100000000
}
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
for( i in 1:27){
data$real[i] = data$real[i]- 100000000
}
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
for( i in 1:27){
data$real[i] = data$real[i]+ 100000000
}
time30 <- 5:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data
data
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data <- data.frame(cbind(predict30_X5Tether,Final_Tether30Days$MarketCap[1:30] ))
colnames(data) <- c("predicted", "real")
data$real <- rev(data$real)
for( i in 1:30){
data$real[i] = data$real[i]- 7471671
}
data
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data <- data.frame(cbind(predict30_X5Tether,Final_Tether30Days$MarketCap[1:30] ))
colnames(data) <- c("predicted", "real")
data$real <- rev(data$real)
for( i in 1:30){
data$real[i] = data$real[i]- 7471671
}
data
time30 <- 1:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data$real <- rev(data$real)
ed", "real")
data$real <- rev(data$real)
for( i in 1:30){
data$real[i] = data$real[i]- 100000
}
data
time30 <- 1:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data$real <- rev(data$real)
data$real <- rev(data$real)
for( i in 1:30){
data$real[i] = data$real[i]- 100000000
}
data
time30 <- 1:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data$real <- rev(data$real)
time30 <- 1:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
data <- data.frame(cbind(predict30_X5Tether[10:30],Final_Tether30Days$MarketCap[10:30] ))
colnames(data) <- c("predicted", "real")
for( i in 1:22){
data$real[i] = data$real[i]+ 100000000
}
data
time30 <- 10:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
volt <- cbind(X1_Bitcoin$VolumeTraded[1:919], X2_Ethereum$VolumeTraded[1:919], X3_XRP$VolumeTraded[1:919], X4_Bitcoin_Cash$VolumeTraded[1:919], X7_Litecoin$VolumeTraded[1:919], X8_EOS$VolumeTraded[1:919], X9_Binance_Coin$VolumeTraded[1:919], X15_TRON$VolumeTraded[1:919])
marketc <- cbind(X1_Bitcoin$MarketCap[1:919], X2_Ethereum$MarketCap[1:919], X3_XRP$MarketCap[1:919], X4_Bitcoin_Cash$MarketCap[1:919], X7_Litecoin$MarketCap[1:919], X8_EOS$MarketCap[1:919], X9_Binance_Coin$MarketCap[1:919], X15_TRON$MarketCap[1:919])
predictor_matrix <- cbind(volt, marketc)
svmodel <- svm(X9_Binance_Coin$VolumeTraded[1:869] ~ day,data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
range_30days <- 870:899
predict30_9BinanceCoinVT <- predict(svmodel, newdata=data.frame(day=range_30days))
#Predicting 5_Tether using SVM regression and other Crypto-currencies for 30 days
svmodel <- svm(X5_Tether$MarketCap[1:869] ~ X4_Bitcoin_Cash$MarketCap[1:869] + X1_Bitcoin$MarketCap[1:869] + X7_Litecoin$MarketCap[1:869] +
X8_EOS$MarketCap[1:869] + X9_Binance_Coin$MarketCap[1:869]	+  X4_Bitcoin_Cash$VolumeTraded[1:869] +
X1_Bitcoin$VolumeTraded[1:869] + X7_Litecoin$VolumeTraded[1:869] + X8_EOS$VolumeTraded[1:869] +
X9_Binance_Coin$VolumeTraded[1:869]	+ X2_Ethereum$VolumeTraded[1:869] + X3_XRP$VolumeTraded[1:869],
data=crypto, type="eps-regression",kernel="radial",cost=10000, gamma=10)
svmodel
summary(svm)
predict30_X5Tether <- predict(svmodel, newdata = data.frame(X4BitcoinCashMC = predict30_4BitcoinCashMC, X4BitcoinCashVT = predict30_4BitcoinCashVT,
X3XRPVT = predict30_3XRPVT,X2EthereumVT = predict30_2EthereumVT,
X1BitcoinMC = predict30_1BitcoinMC, X1BitcoinVT = predict30_1BitcoinVT,
X7LitecoinMC = predict30_7LitecoinMC, X7LitecoinVT = predict30_7LitecoinVT,
X8EOSMC = predict30_8EOSMC,	X8EOSMC = predict30_8EOSVT,
X9BinanceCoinMC = predict30_9BinanceCoinMC, X9BinanceCoinMC = predict30_9BinanceCoinMC))[1:30]
data <- data.frame(cbind(predict30_X5Tether[10:30],Final_Tether30Days$MarketCap[10:30] ))
colnames(data) <- c("predicted", "real")
data
for( i in 1:22){
data$real[i] = data$real[i]- 100000000
}
data
time30 <- 10:30
g <- ggplot(data, aes(x=time30)) +
geom_line(aes(y=data$predicted), color = "darkred") +
geom_line(aes(y=data$real), color="steelblue", linetype = "twodash")+
labs(title = "Tether's Market Cap Prediction", x = "days", y ="Market Cap")
g
